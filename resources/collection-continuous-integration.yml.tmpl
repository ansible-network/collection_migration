{% raw %}name: Collection test suite

on:
  push:
  pull_request:
  schedule:
  - cron: 3 0 * * *  # Run daily at 0:03 UTC

jobs:
  build-collection-artifact:
    name: Build collection
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - 3.7
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Uninstall previously installed Ansible via Apt
      run: sudo apt remove --yes ansible
    - name: Uninstall previously installed Ansible via Pip
      run: python -m pip uninstall ansible
    - name: Install Ansible==devel
      run: >-
        python -m
        pip
        install
        git+https://github.com/ansible/ansible.git@devel
    - name: Build a collection tarball
      run: >-
        ansible-galaxy
        collection
        build
        --output-path
        "${GITHUB_WORKSPACE}/.cache/collection-tarballs"
    - name: Store migrated collection artifacts
      uses: actions/upload-artifact@v1
      with:
        name: >-
          collection
        path: .cache/collection-tarballs

  sanity-test-collection-via-vms:
    name: Run sanity tests in collections via VM ${{ matrix.os.vm || 'ubuntu-latest' }}
    needs:
    - build-collection-artifact
    runs-on: ${{ matrix.os.vm || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        ansible-version:
        - ansible==2.9
        - git+https://github.com/ansible/ansible.git@devel
        os:
        - vm: ubuntu-latest
        - vm: ubuntu-16.04
        - vm: macos-latest
        python-version:
        - 3.8
        - 3.7
        - 3.6
        - 3.5
        - 2.7
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Uninstall previously installed Ansible via Apt
      run: sudo apt remove --yes ansible
      if: startsWith(matrix.os.vm, 'ubuntu')
    - name: Uninstall previously installed Ansible via Pip
      run: python -m pip uninstall ansible
    - name: Install Ansible ${{ matrix.ansible-version }}
      run: >-
        python -m
        pip
        install
        ${{ matrix.ansible-version }}
    - name: Download migrated collection artifacts
      uses: actions/download-artifact@v1
      with:
        name: >-
          collection
        path: .cache/collection-tarballs
    - name: Install the collection tarball
      run: >-
        ansible-galaxy
        collection
        install
        .cache/collection-tarballs/*.tar.gz
    - name: Run collection sanity tests
      run: >-
        ansible-test
        sanity
        --requirements
        --python
        "${{ matrix.python-version }}"
        -vvv
      working-directory: >-
        /${{ runner.os == 'Linux' && 'home' || 'Users' }}/runner/.ansible/collections/ansible_collections/{% endraw %}{{ coll_ns }}/{{ coll_name }}{% raw %}

  sanity-test-collection-via-containers:
    name: Run sanity tests in collections via container ${{ matrix.os.image }}
    needs:
    - build-collection-artifact
    runs-on: ubuntu-latest
    container: ${{ matrix.os.image }}
    strategy:
      fail-fast: false
      matrix:
        ansible-version:
        - ansible==2.9
        - git+https://github.com/ansible/ansible.git@devel
        os:
        - image: quay.io/ansible/default-test-container:1.10.1
        - image: quay.io/ansible/fedora30-test-container:1.9.2
        python-version:
        - 3.8
        - 3.7
        - 3.6
        - 3.5
        - 2.7
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Ansible ${{ matrix.ansible-version }}
      run: >-
        python -m
        pip
        install
        ${{ matrix.ansible-version }}
    - name: Download migrated collection artifacts
      uses: actions/download-artifact@v1
      with:
        name: >-
          collection
        path: .cache/collection-tarballs
    - name: Install the collection tarball
      run: >-
        ansible-galaxy
        collection
        install
        .cache/collection-tarballs/*.tar.gz
    - name: Run collection sanity tests
      run: >-
        ansible-test
        sanity
        --requirements
        --python
        "${{ matrix.python-version }}"
        -vvv
      working-directory: >-
        /${{ runner.os == 'Linux' && 'home' || 'Users' }}/runner/.ansible/collections/ansible_collections/{% endraw %}{{ coll_ns }}/{{ coll_name }}{% raw %}

  unit-test-collection-via-vms:
    name: Run unit tests in collections via VM ${{ matrix.os.vm || 'ubuntu-latest' }}
    needs:
    - build-collection-artifact
    runs-on: ${{ matrix.os.vm || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        ansible-version:
        - ansible==2.9
        - git+https://github.com/ansible/ansible.git@devel
        os:
        - vm: ubuntu-latest
        - vm: ubuntu-16.04
        - vm: macos-latest
        python-version:
        - 3.8
        - 3.7
        - 3.6
        - 3.5
        - 2.7
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Uninstall previously installed Ansible via Apt
      run: sudo apt remove --yes ansible
      if: startsWith(matrix.os.vm, 'ubuntu')
    - name: Uninstall previously installed Ansible via Pip
      run: python -m pip uninstall ansible
    - name: Install Ansible ${{ matrix.ansible-version }}
      run: >-
        python -m
        pip
        install
        ${{ matrix.ansible-version }}
    - name: Download migrated collection artifacts
      uses: actions/download-artifact@v1
      with:
        name: >-
          collection
        path: .cache/collection-tarballs
    - name: Install the collection tarball
      run: >-
        ansible-galaxy
        collection
        install
        .cache/collection-tarballs/*.tar.gz
    - name: Run collection unit tests
      run: |
        [[ ! -d 'tests/unit' ]] && echo This collection does not have unit tests. Skipping... || \
        ansible-test units --requirements --python "${{ matrix.python-version }}" -vvv
      working-directory: >-
        /${{ runner.os == 'Linux' && 'home' || 'Users' }}/runner/.ansible/collections/ansible_collections/{% endraw %}{{ coll_ns }}/{{ coll_name }}{% raw %}

  unit-test-collection-via-containers:
    name: Run unit tests in collections via container ${{ matrix.os.image }}
    needs:
    - build-collection-artifact
    runs-on: ubuntu-latest
    container: ${{ matrix.os.image }}
    strategy:
      fail-fast: false
      matrix:
        ansible-version:
        - ansible==2.9
        - git+https://github.com/ansible/ansible.git@devel
        os:
        - image: quay.io/ansible/default-test-container:1.10.1
        - image: quay.io/ansible/fedora30-test-container:1.9.2
        python-version:
        - 3.8
        - 3.7
        - 3.6
        - 3.5
        - 2.7
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Ansible ${{ matrix.ansible-version }}
      run: >-
        python -m
        pip
        install
        ${{ matrix.ansible-version }}
    - name: Download migrated collection artifacts
      uses: actions/download-artifact@v1
      with:
        name: >-
          collection
        path: .cache/collection-tarballs
    - name: Install the collection tarball
      run: >-
        ansible-galaxy
        collection
        install
        .cache/collection-tarballs/*.tar.gz
    - name: Run collection unit tests
      run: |
        [[ ! -d 'tests/unit' ]] && echo This collection does not have unit tests. Skipping... || \
        ansible-test units --requirements --python "${{ matrix.python-version }}" -vvv
      working-directory: >-
        /${{ runner.os == 'Linux' && 'home' || 'Users' }}/runner/.ansible/collections/ansible_collections/{% endraw %}{{ coll_ns }}/{{ coll_name }}
